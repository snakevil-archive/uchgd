#!/bin/sh
#
# permq: 查询指定用户在指定版本库中的权限信息。
#
# AUTHOR    Snakevil Zen <zhengyy@ucweb.com>
# COPYRIGHT © 2011 uc.cn.

export PATH="/usr/local/bin:/usr/bin:/bin"

# {{{ 参数检查

USER=$1

REPO_AUTH=$2

[ 0 -eq $# ] && {
  'cat' << USAGE
permq: 查询指定用户在指定版本库中的权限信息。

USAGE: permq <USER> <REPOSITORY_AUTH>

RESULT:
  <BRANCH>  <SOURCE>
  ...
USAGE
  exit 0
}

[ -n "${USER}" -a -n "${REPO_AUTH}" ] || exit 1

# }}}

# {{{ 版本库检查

[ -f "${REPO_AUTH}" -a -r "${REPO_AUTH}" ] || exit 2

# }}}

# {{{ 查询权限

'awk' '{ \
    gsub(/^[[:space:]]+/, ""); \
    gsub(/[[:space:]]+$/, ""); \
    gsub(/[[:space:]]+/, " "); \
    gsub(/ =( |$)/, "="); \
    if (length($0) && "#" != substr($0, 1, 1)) \
      print; \
  }' "${REPO_AUTH}" \
  | 'awk' -F'=' -v"u=${USER}" ' \
      "*" == $1 { \
        bo = $2; # 『所有用户』的授权『分支列表』 \
      } \
      u == $1 { \
        bu = $2; # 指定『真实用户』的授权『分支列表』 \
      } \
      "%" == substr($1, 1, 1) { \
        bgx[substr($1, 2)] = $2; # 所有『组定义』的授权『分支列表』 \
      } \
      "@" == substr($1, 1, 1) { \
        gx[substr($1, 2)] = $2; # 所有『组定义』 \
      } \
      END { \
        # 解读指定『真实用户』的最终授权 \
        split(bu, bux, / /); \
        for (i in bux) \
          pux[bux[i]] = u; \
        if (pux["-"]) { \
          print "-", u; \
          exit 0; # 指定『真实用户』被『禁用权限』 \
        } else if (pux["*"]) { \
          print "*", u; \
          exit 0; # 指定『真实用户』被『全写权限』 \
        } else for (i in pux) \
          if (pux[i]) { \
            pxl++; \
            px[i] = pux[i]; \
          } \
        # 展开层叠的『组定义』 \
        for (i in gx) { \
          while (match(gx[i], /%[^[:space:]]+/)) { \
            j = substr(gx[i], 1 + RSTART, RLENGTH - 1); \
            j = i == j ? "" : gx[j]; \
            gx[i] = substr(gx[i], 1, RSTART - 1) \
              ""j"" \
              substr(gx[i], RSTART + RLENGTH); \
          } \
          gsub(/[[:space:]]+/, " ", gx[i]); \
        } \
        # 解读所有『组定义』的最终授权 \
        for (i in bgx) \
          if (0 != index(" "gx[i]" ", " "u" ")) { \
            split(bgx[i], bgix, / /); \
            for (j in bgix) \
              if (!pgx[bgix[j]]) \
                pgx[bgix[j]] = "%"i; \
          } \
        if (pgx["-"]) { \
          if (pxl) { \
            for (i in px) \
              print i, px[i]; \
          } else \
            print "-", pgx["-"]; \
          exit 0; # 『组定义』被『禁用权限』 \
        } else if (pgx["*"]) { \
          print "*", pgx["*"]; \
          exit 0; # 『组定义』被『全写权限』 \
        } else for (i in pgx) \
          if (pgx[i] && !px[i]) { \
            pxl++; \
            px[i] = pgx[i]; \
          } \
        # 解读『所有用户』的最终授权 \
        split(bo, box, / /); \
        for (i in box) { \
          pox[box[i]] = "*"; \
        } \
        if (pox["-"]) { \
          if (pxl) { \
            for (i in px) \
              print i, px[i]; \
          } else \
            print "-", "*"; \
          exit 0; # 『所有用户』被『禁用权限』 \
        } else if (pox["*"]) { \
          print "*", "*"; \
          exit 0; # 『所有用户』被『权限权限』 \
        } \
        for (i in pox) \
          if (pox[i] && !px[i]) \
            px[i] = pox[i]; \
        for (i in px) \
          if (px[i]) \
            print i, px[i]; \
      } \
    '

# }}}

# vim:ft=sh:fenc=utf-8:ff=unix:tw=75:ts=2:sts=2:et:ai:si
# vim:nowrap:sw=2:nu:nuw=4:so=5:fen:fdm=marker
